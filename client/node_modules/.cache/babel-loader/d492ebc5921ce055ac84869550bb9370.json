{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abele\\\\projects\\\\shop-shop\\\\client\\\\src\\\\components\\\\CartItem\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartItem = ({\n  item\n}) => {\n  _s();\n\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${item.image}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.name, \", $\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Qty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1\",\n          value: item.purchaseQuantity,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"trash\",\n          onClick: () => removeFromCart(item),\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartItem, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["C:/Users/abele/projects/shop-shop/client/src/components/CartItem/index.js"],"names":["React","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","useDispatch","useSelector","CartItem","item","state","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAE7B,QAAMC,KAAK,GAAGH,WAAW,CAAEG,KAAD,IAAW;AACnC,WAAOA,KAAP;AACD,GAFwB,CAAzB;AAGA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AAEE,QAAMM,cAAc,GAAGH,IAAI,IAAI;AAC3BE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,GAAG,EAAEL,IAAI,CAACK;AAFH,KAAD,CAAR;AAIAT,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGI;AAAL,KAAnB,CAAV;AACD,GANH;;AASA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AAEA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjBN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEV,gBADC;AAEPW,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFH,OAAD,CAAR;AAKAT,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAC,GAAGI;AAAJ,OAAnB,CAAV;AACD,KAPD,MAOO;AACLE,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAET,oBADC;AAEPU,QAAAA,GAAG,EAAEL,IAAI,CAACK,GAFH;AAGPK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHnB,OAAD,CAAR;AAMAZ,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGI,IAAL;AAAWU,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AACD;AACF,GAnBH;;AAsBF,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,GAAG,EAAG,WAAUR,IAAI,CAACY,KAAM,EAD7B;AAEE,QAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,8BACE;AAAA,mBAAMZ,IAAI,CAACa,IAAX,SAAoBb,IAAI,CAACc,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,GAFd;AAGE,UAAA,KAAK,EAAEd,IAAI,CAACU,gBAHd;AAIE,UAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQI;AACA,UAAA,IAAI,EAAC,KADL;AAEA,wBAAW,OAFX;AAGA,UAAA,OAAO,EAAE,MAAMH,cAAc,CAACH,IAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnED;;GAAMD,Q;UAEUD,W,EAGGD,W;;;KALbE,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartItem = ({ item }) => {\n\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n    const removeFromCart = item => {\n        dispatch({\n          type: REMOVE_FROM_CART,\n          _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n      };\n\n\n    const onChange = (e) => {\n        const value = e.target.value;\n      \n        if (value === '0') {\n          dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n          });\n\n          idbPromise('cart', 'delete', {...item})\n        } else {\n          dispatch({\n            type: UPDATE_CART_QUANTITY,\n            _id: item._id,\n            purchaseQuantity: parseInt(value)\n          });\n\n          idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value)})\n        }\n      };\n\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n            <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n            >\n            üóëÔ∏è\n            </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}